// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  nickname      String?
  class         Class @default(None)
  venmo         String?
  email         String?   @unique
  number        String?
  emailVerified DateTime?
  image         String?
  role          Role    @default(BROTHER)
  status        Status @default(ACTIVE)
  accounts      Account[]
  sessions      Session[]
  points        BrotherPoints[]
}

model BrotherPoints {
  id                        String @id @default(cuid())
  userId                    String
  brother                   User @relation(references: [id], fields: [userId])
  semester                  Semester
  brotherhood               Int
  communityService          Int
  professionalDevelopment   Int
  fundraising               Int
  pledge                    Int
}

model SemesterPoints {
  id                        String @id @default(cuid())
  semester                  Semester
  brotherhood               Int
  communityService          Int
  professionalDevelopment   Int
  fundraising               Int
  pledge                    Int
}

model Event {
  id                        String @id @default(cuid())
  title                     String
  semester                  Semester
  category                  Category
  value                     Int
  userIds                   String[]
}


model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Category {
  PROFESSIONAL_DEVELOPMENT
  COMMUNITY_SERVICE
  BROTHERHOOD
  FUNDRAISING
  OUTREACH
  PLEDGE
}

enum Class {
  DeltaBeta
  GammaBeta
  Omega
  Psi
  Chi
  Phi
  None
}

enum Status {
  ACTIVE
  INACTIVE
  ALUM
}

enum Semester {
  S23
  F23
  S24
}

enum Role {
  EBOARD
  CHAIR
  BROTHER
}